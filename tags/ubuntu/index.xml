<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ubuntu on Mansoor Barri</title>
    <link>https://www.mansoor.cf/tags/ubuntu/</link>
    <description>Recent content in ubuntu on Mansoor Barri</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 26 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.mansoor.cf/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mirror Android Screen with Sound</title>
      <link>https://www.mansoor.cf/posts/android-screen-mirror/</link>
      <pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.mansoor.cf/posts/android-screen-mirror/</guid>
      <description>Brief You can&amp;rsquo;t mirror screen and sound together so we&amp;rsquo;ll use two different tools to do the job. This method can be done on Linux &amp;amp; Windows but I am using Linux (Debian) in this case.
Tools Scrcpy - for screen mirror
sndcpy - for sound
Install Scrcpy:
sudo apt install Scrcpy Sndcpy: download the latest release and extract the files
Mirror Screen with Scrcpy First, go to your device settings and enable developer mode then, connect your Android device to your computer with your charger.</description>
    </item>
    
    <item>
      <title>Getting Started - PhoneInFoga</title>
      <link>https://www.mansoor.cf/posts/phoneinfoga/</link>
      <pubDate>Sat, 20 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.mansoor.cf/posts/phoneinfoga/</guid>
      <description>Brief PhoneInFoga - Information gathering &amp;amp; OSINT framework for phone numbers.
This install guide is specific to Debian/Ubuntu machines, for other installation options, visit PhoneInfoga&amp;rsquo;s install page.
Install Installation documentation
run these command:
Install the latest version
curl -sSL https://raw.githubusercontent.com/sundowndev/phoneinfoga/master/support/scripts/install | bash Confirm/Check install
./phoneinfoga version Copy it to path for global install
sudo mv ./phoneinfoga /usr/bin/phoneinfoga Usage Scan with &amp;ldquo;phoneinfoga -n [NUMBER WITH COUNTRY CODE]&amp;rdquo;
Example:
phoneinfoga -n +1234567891 The output is kinda weird and messy so using the web GUI is a better way.</description>
    </item>
    
    <item>
      <title>Linux | UFW</title>
      <link>https://www.mansoor.cf/posts/linux-firewall/</link>
      <pubDate>Fri, 05 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.mansoor.cf/posts/linux-firewall/</guid>
      <description>Uncomplicated Firewall (UFW) is an easy and beginner friendly firewall for linux systems.
Install sudo apt-get update sudo apt-get install ufw Verify Install sudo ufw status Basic Blocks sudo ufw default deny incoming sudo ufw default allow outgoing Enable Firewall sudo ufw enable Blocking Ports you can block any port by &amp;ldquo;sudo ufw deny PORT&amp;rdquo; for example, to block port 76 type:
sudo ufw deny 76 Allow Ports you can allow any port by &amp;ldquo;sudo ufw allow PORT&amp;rdquo; for example, to allow port 22 (default SSH port) type:</description>
    </item>
    
    <item>
      <title>Linux | Better APT</title>
      <link>https://www.mansoor.cf/posts/better-apt/</link>
      <pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.mansoor.cf/posts/better-apt/</guid>
      <description>why not APT? APT has slow mirrors, APT isn&amp;rsquo;t optimised for performance right out of the box, rolling back updates or installs is pain because there is no concept of history and last but not the least, the look of APT is just mehhh.
Nala is just better. Nala fixes all these problems right from the start while having APT is the backend.
Install add repository
echo &amp;#34;deb http://deb.volian.org/volian/ scar main&amp;#34; | sudo tee /etc/apt/sources.</description>
    </item>
    
    <item>
      <title>Linux | Automatic Updates</title>
      <link>https://www.mansoor.cf/posts/auto-updates/</link>
      <pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.mansoor.cf/posts/auto-updates/</guid>
      <description>Brief Unattendeed Upgrades - Automatic installation of security upgrades on apt based systems.
install sudo apt update sudo apt install unattended-upgrades -y Enable Automatic Updates enable automatic updates by:
sudo dpkg-reconfigure -plow unattended-upgrades  &amp;ldquo;-plow&amp;rdquo; is to set prorioty as low for unattended upgrades.  select &amp;ldquo;yes&amp;rdquo; from these options:
Other config/sources For more about configuration, go through this blog by Hayden James.
that‚Äôs it ‚úåüèΩ
 </description>
    </item>
    
    <item>
      <title>Linux | Install BeEF on Debian</title>
      <link>https://www.mansoor.cf/posts/beef-debian/</link>
      <pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.mansoor.cf/posts/beef-debian/</guid>
      <description>DISCLAIMER THIS TOOL SHOULD ONLY BE USED FOR EDUCATIONAL OR ETHICAL HACKING PURPOSE. MISUSE OF THIS TOOL WILL LEAD TO PROSECUTION.
BRIEF BeEF is short for The Browser Exploitation Framework. It is a penetration testing tool that focuses on the web browser.
Step 1: installing dependencies Before installing anything update your repositories.
sudo apt update -y Ruby, Ruby-dev and Git is required for BeEF. Install them using:
sudo apt install ruby ruby-dev git -y Step 2: Installation Clone BeEF repo</description>
    </item>
    
    <item>
      <title>Linux | Install Windows 7</title>
      <link>https://www.mansoor.cf/posts/windows7onlinux/</link>
      <pubDate>Sun, 02 Jan 2022 23:39:49 +0530</pubDate>
      
      <guid>https://www.mansoor.cf/posts/windows7onlinux/</guid>
      <description>Brief Some things just are better on windows than linux thus having a windows virtual machine(VM) is a great idea specially when daily driving linux.
We will be using Vert Manager to use windows 7 on vanilla Debian linux however, this will work on any Debian based system i.e Ubuntu.
Machine I am using: Step 1: Confirm virtualization Open terminal and type
grep -o &amp;quot;vm\|sum&amp;quot; /proc/cpuinfo here the command outputs ‚Äòvmx‚Äô but if u are not using intel processor it will show ‚ÄòSVM‚Äô instead.</description>
    </item>
    
  </channel>
</rss>
